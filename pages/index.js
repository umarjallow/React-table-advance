import Head from "next/head";
import styles from "../styles/Home.module.css";
import Table from "../components/Table";
import React, { useState, useEffect, useMemo } from "react";
import { getUsers, addUser } from "./api/";

export default function Home() {
  const [page, setPage] = useState(1);
  const [perPage, setPerPage] = useState(5);
  const [data, setData] = useState([]);
  const [totalPage, setTotalPage] = useState(1)
  const [isLoading, setIsLoading] = useState(false)
  const [searchTitle, setSearchTitle] = useState("")
  const [search, setSearch] = useState("")
  
  const getUsersAll = () => {
    let params = {
      "title" : searchTitle,
      page,
      perPage
    }
    console.log(params)
      getUsers(params)
      .then((users) => { 
          let tPage = Math.ceil(users.headers["x-total-count"]/perPage)
          setTotalPage(tPage)
          setIsLoading(false)
          setData(users.data);
      })
      .catch((err) => {
          setIsLoading(false)
          err.response
      });
  }

  const addNewUser = (e) => {
      e.preventDefault()
      let usr = {
        "id":104,
        "firstname":"Bany",
        "lastname":"Dial",
        "email":"bnd@fff.com",
        "gender":"Female"
      }
      setIsLoading(true)
      addUser(usr).then(
        (res) => {
          console.log("res", res)
            if (res.status == 201){
                alert("Bien ajouté")
                setIsLoading(false)
            }
        }).catch((err) => {
        setIsLoading(false)
        err.response
    });
  }
  
  useEffect(() => {
      setIsLoading(true)
      getUsersAll()
  }, [searchTitle, page, perPage]);

  const datas = useMemo(() => data);

  const columns = [
    {
      Header: "Id",
      accessor: "id",
    },
    {
      Header: "First Name",
      accessor: "firstname",
    },
    {
      Header: "Last Name",
      accessor: "lastname",
    },
    {
      Header: "Email",
      accessor: "email",
    },
    {
      Header: "Sexe",
      accessor: "gender",
    },
  ];

  const handleButtonSearch = (e) => {
     e.preventDefault();
     console.log("okk", search)
     setSearchTitle(search)
     getUsersAll()
  }

  if(isLoading){return "Loading..."}
  if (!isLoading && datas.length === 0){ return "La liste est vide"}

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className="py-2 mx-4 lg:py-10">
            <button onClick={addNewUser} type="button" className="bg-blue-500 py-2 px-4">
                    Ajouter un nouvel user
            </button>
            <form onSubmit={handleButtonSearch} className="bg-white shadow flex w-full">
                <input
                    type="text"
                    value={search}
                    onChange={(e => setSearch(e.target.value))}
                    placeholder="Rechercher par prénom"
                    className="w-full rounded-tl-full rounded-bl-full py-2 px-4" 
                />
                <button type="submit" className="bg-yellow-400 hover:bg-purple-300 py-2 px-4">
                    Rechercher
                </button>
            </form>
        </div>
        <div className="overflow-x-auto">
          <div className="min-w-screen min-h-screen flex items-center justify-center font-sans overflow-hidden">
            <div className="w-full">
              <div className="bg-white shadow-md rounded my-6">
                <Table 
                    setPage={setPage}
                    setPerPage={setPerPage} 
                    columns={columns}
                    data={datas} 
                    currentpage={page} 
                    perPage={perPage} 
                    totalPage={totalPage} 
                    loading={isLoading}
                />
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}
